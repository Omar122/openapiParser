openapi: 3.0.1
info:
  title: Swagger Petstore
  description: A sample API that uses a petstore as an example to demonstrate features
    in the swagger-2.0 specification
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    url: http://swagger.io
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://petstore.swagger.io/api
paths:
  /pets:
    get:
      description: |
        Returns all pets from the system that the user has access to
      operationId: findPets
      parameters:
      - name: tags
        in: query
        description: tags to filter by
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: maximum number of results to return
        schema:
          type: integer
          format: int32
      - name: Authorization
        in: header
        description: |
          Authorization header. This parameter accepts HTTP Basic authentications. Check the security requirements of the API resource you intend to use.
            Basic Auth example: ```Authorization: Basic YXBpS2V5OmFwaVNlY3JldA==```
            The API client credentials are combined with a colon i.e. ```key:secret``` and must be base64 encoded.```
        required: true
        schema:
          type: string
      responses:
        "200":
          description: pet response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new pet in the store.  Duplicates are allowed
      operationId: addPet
      requestBody:
        description: Pet to add to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPet'
        required: true
      responses:
        "200":
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: pet
  /pets/{id}:
    get:
      description: "Returns a user based on a single ID, if the user does not have\
        \ access to the pet"
      operationId: find pet by id
      parameters:
      - name: id
        in: path
        description: ID of pet to fetch
        required: true
        schema:
          type: integer
          format: int64
          example: 123
      responses:
        "200":
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      parameters:
      - name: id
        in: path
        description: ID of pet to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: pet deleted
          content: {}
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /pets/new:
    post:
      description: Creates a new pet in the store.  Duplicates are allowed
      operationId: addNewPet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/simUpdateRequest'
        required: true
      responses:
        "200":
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: simResource
  /pets/post:
    post:
      description: Cr
      operationId: addNewerPet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionResultReq'
        required: true
      responses:
        "200":
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: requestBody
components:
  schemas:
    Pet:
      allOf:
      - $ref: '#/components/schemas/NewPet'
      - required:
        - id
        type: object
        properties:
          id:
            type: integer
            format: int64
    NewPet:
      required:
      - name
      - tag
      type: object
      properties:
        name:
          type: string
        tag:
          type: string
    Error:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    simUpdateRequest:
      required:
      - action
      - order
      - relatedCustomer
      - requestDate
      - simSharedCharacteristics
      - sims
      type: object
      properties:
        action:
          type: string
          description: |
            The type of the action that Sim Inventory has to perform for this resource update
          enum:
          - SIM_RESERVATION
        requestDate:
          type: string
          description: |
            The date on which this request is raised. Allowed format: yyyy-MM-dd'T'HH:mm:ss
          example: 2020-08-27T14:23:22
        relatedCustomer:
          $ref: '#/components/schemas/customer'
        order:
          $ref: '#/components/schemas/order'
        simSharedCharacteristics:
          $ref: '#/components/schemas/simCharacteristic'
        sims:
          type: array
          description: "SIM List.   \n\n- For new multi sim scenario at least two\
            \ SIMs must be provided.\n"
          items:
            $ref: '#/components/schemas/sim'
      description: Request details
    sim:
      required:
      - iccid
      - simSequenceNumber
      type: object
      properties:
        iccid:
          type: string
          description: |
            The iccid of this SIM having a length of 18 digits
          example: "899660153010008998"
        simSequenceNumber:
          type: string
          description: "The sim sequence number. for single sim scenario it should\
            \ be set to the value as \"1\". \n\nFor multi sim scenario, the value\
            \ should be set as:\n- \"1\" for first sim \n- \"2\" for second sim\n\
            - \"3\" for third sim\n"
          enum:
          - "1"
          - "2"
          - "3"
      description: |
        SIM Individual characterstics
    simCharacteristic:
      required:
      - productCategory
      - technology
      type: object
      properties:
        technology:
          type: string
          description: |
            The technology of this SIM
          enum:
          - 3G
        productCategory:
          type: string
          description: |
            SIM Product Category indicator.
          enum:
          - SAWA
          - ALJAWAL
          - FLEX
        productCategoryForPortIn:
          type: string
          description: |
            SIM Product Category for a ported-in connection. It is mandatory if order.orderSubType=MNPPortIn.
          enum:
          - PREPAID
          - POSTPAID
          - FLEX
        productType:
          type: string
          description: |
            Indicates the actual product Type of the SIM. It will be set to * if not supplied or empty
          example: Mobile-Business-SAWA25
        isPreProvisioned:
          type: string
          description: |
            Indicates whether the associated sims are Pre-Provisioned on the network or not. It will be set to false if not supplied or empty
          enum:
          - "false"
          - "true"
      description: The SIM characterstics.
    customer:
      required:
      - accountId
      type: object
      properties:
        accountId:
          type: string
          description: CRM account Id of the customer associated with this SIM update
          example: "100396556"
      description: Customer Details.
    product:
      required:
      - billingCategory
      type: object
      properties:
        billingCategory:
          type: string
          description: The billing Category of the product associated to the required
            sim and order
          enum:
          - Postpaid
          - Prepaid
          - Flex
      description: |
        Product Details associated with this order
    order:
      required:
      - id
      - orderSubType
      - orderType
      - product
      - storeId
      type: object
      properties:
        id:
          type: string
          description: |
            The CRM Order Id
          example: 3-18954573361
        orderType:
          type: string
          description: The type of the related order in CRM
          enum:
          - New
          - Change SIM
          - Migrate
        orderSubType:
          type: string
          description: The order sub type of the related order in CRM
          enum:
          - New
          - MNPPortIn
          - Change SIM
          - SIMtoMultiSIM
          - MultiSIM
          - MultiSIMtoSIM
          - PrepaidToPostpaid
          - PrepaidtoPostpaid
          - PostpaidToFlex
          - FlexToPostpaid
          - PrepaidFlexToPostpaid
          - PrepaidFlexToFlex
        storeId:
          type: string
          description: |
            The id of the store on which the sims in this request are getting assocciated to this order
          example: StoreId-1
        product:
          $ref: '#/components/schemas/product'
      description: Order Details.
    UpdateSubscriptionResultReq:
      required:
      - service
      type: object
      properties:
        service:
          required:
          - serviceCharacteristic
          - serviceIdentifier
          - serviceSpecificationTypeCode
          type: object
          properties:
            serviceIdentifier:
              type: string
              description: MSISDN of the customer
              example: "531232215"
            serviceSpecificationTypeCode:
              type: string
              description: Service Specification Type
              example: "1234"
            serviceCharacteristic:
              type: array
              description: service Characteristic
              items:
                $ref: '#/components/schemas/serviceCharacteristic'
          description: service object
      description: Request for updating the service subscription request
    serviceCharacteristic:
      type: object
      properties:
        serviceCharacteristicCode:
          type: string
          description: ServiceCharacteristic Code
          example: TransactionID/TransactionStatus/Amount/SubscriptionResult/Validity/TimeoutFlag
        serviceCharacteristicValue:
          type: string
          description: ServiceCharacteristic Value
          example: value of TransactionID/TransactionStatus/Amount/SubscriptionResult/Validity/TimeoutFlag
      description: ServiceCharacteristic Object
    simForResponse:
      required:
      - iccid
      - imsi
      - productCategory
      - productType
      - technology
      type: object
      properties:
        type:
          type: string
          description: |
            The type of the SIM, example: ESIM, REGULAR etc
          example: ESIM
        imsi:
          type: string
          description: |
            The IMSI of this SIM
          example: "420010845466094"
        pin1:
          type: string
          description: |
            The pin1 of this SIM
          example: "1234"
        pin2:
          type: string
          description: |
            The pin2 of this SIM
          example: "5678"
        puk1:
          type: string
          description: |
            The puk1 of this SIM
          example: "12345678"
        puk2:
          type: string
          description: |
            The pukk2 of this SIM
          example: "87654321"
        serviceProfile:
          type: string
          description: |
            serviceProfile of ths SIM, applicable for prepaid only
          example: service profile 1
        productCategory:
          type: string
          description: |
            SIM Product Category indicator.
          enum:
          - SAWA
          - ALJAWAL
          - FLEX
        productType:
          type: string
          description: |
            Indicates the actual product Type of the SIM
          example: Mobile-Business-SAWA25
        serviceType:
          type: string
          description: |
            Indicates the type of the service this SIM supports
          enum:
          - Prepaid
          - Postpaid
        iccid:
          type: string
          description: |
            The iccid of this SIM having a length of 18 digits
          example: "899660153010008998"
        technology:
          type: string
          description: |
            The technology of this SIM
          enum:
          - 3G
      description: |
        The sim physical details
x-original-swagger-version: "2.0"
