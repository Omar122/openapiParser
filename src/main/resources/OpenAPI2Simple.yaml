swagger: "2.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  description: A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: http://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
host: petstore.swagger.io
basePath: /api
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /pets:
    get:
      description: |
        Returns all pets from the system that the user has access to
      operationId: findPets
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
        - name: Authorization
          in: header
          type: string
          required: true
          example: Basic YXBpS2V5OmFwaVNlY3JldA==
          description: |
            Authorization header. This parameter accepts HTTP Basic authentications. Check the security requirements of the API resource you intend to use.
              Basic Auth example: ```Authorization: Basic YXBpS2V5OmFwaVNlY3JldA==```
              The API client credentials are combined with a colon i.e. ```key:secret``` and must be base64 encoded.```
      responses:
        "200":
          description: pet response
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Creates a new pet in the store.  Duplicates are allowed
      operationId: addPet
      parameters:
        - name: pet
          in: body
          description: Pet to add to the store
          required: true
          schema:
            $ref: '#/definitions/NewPet'
      responses:
        "200":
          description: pet response
          schema:
            $ref: '#/definitions/Pet'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /pets/{id}:
    get:
      description: Returns a user based on a single ID, if the user does not have access to the pet
      operationId: find pet by id
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: pet response
          schema:
            $ref: '#/definitions/Pet'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      parameters:
        - name: id
          in: path
          description: ID of pet to delete
          required: true
          type: integer
          format: int64
      responses:
        "204":
          description: pet deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /pets/new:
    post:
      description: Creates a new pet in the store.  Duplicates are allowed
      operationId: addNewPet
      parameters:
        - name: simResource
          required: true
          in: body
          description: ''
          schema:
            $ref: '#/definitions/simUpdateRequest'
      responses:
        "200":
          description: pet response
          schema:
            $ref: '#/definitions/Pet'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'

  /pets/post:
    post:
      description: Cr
      operationId: addNewerPet
      parameters:
        - name: requestBody
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSubscriptionResultReq'
      responses:
        "200":
          description: pet response
          schema:
            $ref: '#/definitions/Pet'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Pet:
    allOf:
      - $ref: '#/definitions/NewPet'
      - required:
          - id
        type: "object"
        properties:
          id:
            type: integer
            format: int64

  NewPet:
    type: "object"
    required:
      - name
      - tag
    properties:
      name:
        type: string
      tag:
        type: string
  Error:
    type: "object"
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  simUpdateRequest:
    type: object
    description: Request details
    required:
      - action
      - requestDate
      - relatedCustomer
      - order
      - simSharedCharacteristics
      - sims
    properties:
      action:
        type: string
        description: >
          The type of the action that Sim Inventory has to perform for this
          resource update
        enum:
          - SIM_RESERVATION
      requestDate:
        description: >
          The date on which this request is raised. Allowed format:
          yyyy-MM-dd'T'HH:mm:ss
        example: '2020-08-27T14:23:22'
        type: string
      relatedCustomer:
        $ref: '#/definitions/customer'
      order:
        $ref: '#/definitions/order'
      simSharedCharacteristics:
        $ref: '#/definitions/simCharacteristic'
      sims:
        description: |
          SIM List.   

          - For new multi sim scenario at least two SIMs must be provided.
        type: array
        minLength: 1
        maxLength: 3
        items:
          $ref: '#/definitions/sim'
  sim:
    type: object
    description: |
      SIM Individual characterstics
    required:
      - iccid
      - simSequenceNumber
    properties:
      iccid:
        description: |
          The iccid of this SIM having a length of 18 digits
        type: string
        example: '899660153010008998'
      simSequenceNumber:
        description: >
          The sim sequence number. for single sim scenario it should be set to
          the value as "1". 


          For multi sim scenario, the value should be set as:

          - "1" for first sim 

          - "2" for second sim

          - "3" for third sim
        type: string
        enum:
          - '1'
          - '2'
          - '3'
  simCharacteristic:
    type: object
    description: The SIM characterstics.
    required:
      - technology
      - productCategory
    properties:
      technology:
        description: |
          The technology of this SIM
        type: string
        enum:
          - 3G
      productCategory:
        description: |
          SIM Product Category indicator.
        type: string
        enum:
          - SAWA
          - ALJAWAL
          - FLEX
      productCategoryForPortIn:
        description: >
          SIM Product Category for a ported-in connection. It is mandatory if
          order.orderSubType=MNPPortIn.
        type: string
        enum:
          - PREPAID
          - POSTPAID
          - FLEX
      productType:
        description: >
          Indicates the actual product Type of the SIM. It will be set to * if
          not supplied or empty
        type: string
        example: Mobile-Business-SAWA25
      isPreProvisioned:
        description: >
          Indicates whether the associated sims are Pre-Provisioned on the
          network or not. It will be set to false if not supplied or empty
        type: string
        enum:
          - 'false'
          - 'true'
  customer:
    type: object
    description: Customer Details.
    required:
      - accountId
    properties:
      accountId:
        type: string
        description: CRM account Id of the customer associated with this SIM update
        example: '100396556'
  product:
    description: |
      Product Details associated with this order
    required:
      - billingCategory
    properties:
      billingCategory:
        type: string
        description: >-
          The billing Category of the product associated to the required sim and
          order
        enum:
          - Postpaid
          - Prepaid
          - Flex
  order:
    type: object
    description: Order Details.
    required:
      - id
      - orderType
      - orderSubType
      - storeId
      - product
    properties:
      id:
        description: |
          The CRM Order Id
        type: string
        example: 3-18954573361
      orderType:
        type: string
        description: The type of the related order in CRM
        enum:
          - New
          - Change SIM
          - Migrate
      orderSubType:
        type: string
        description: The order sub type of the related order in CRM
        enum:
          - New
          - MNPPortIn
          - Change SIM
          - SIMtoMultiSIM
          - MultiSIM
          - MultiSIMtoSIM
          - PrepaidToPostpaid
          - PrepaidtoPostpaid
          - PostpaidToFlex
          - FlexToPostpaid
          - PrepaidFlexToPostpaid
          - PrepaidFlexToFlex
      storeId:
        type: string
        description: >
          The id of the store on which the sims in this request are getting
          assocciated to this order
        example: StoreId-1
      product:
        $ref: '#/definitions/product'

  UpdateSubscriptionResultReq:
    type: object
    description: "Request for updating the service subscription request"
    properties:
      service:
        type: object
        description: "service object"
        properties:
          serviceIdentifier:
            type: string
            description: "MSISDN of the customer"
            example: "531232215"
          serviceSpecificationTypeCode:
            type: string
            description: "Service Specification Type"
            example: "1234"
          serviceCharacteristic:
            type: array
            description: "service Characteristic"
            items:
              $ref: '#/definitions/serviceCharacteristic'
        required:
          - serviceIdentifier
          - serviceSpecificationTypeCode
          - serviceCharacteristic

    required:
      - service

  serviceCharacteristic:
    type: object
    description: "ServiceCharacteristic Object"
    properties:
      serviceCharacteristicCode:
        type: string
        description: "ServiceCharacteristic Code"
        example: "TransactionID/TransactionStatus/Amount/SubscriptionResult/Validity/TimeoutFlag"
      serviceCharacteristicValue:
        type: string
        description: "ServiceCharacteristic Value"
        example: "value of TransactionID/TransactionStatus/Amount/SubscriptionResult/Validity/TimeoutFlag"

  simForResponse:
    type: object
    description: |
      The sim physical details
    required:
      - imsi
      - iccid
      - productCategory
      - productType
      - technology
    properties:
      type:
        description: |
          The type of the SIM, example: ESIM, REGULAR etc
        type: string
        example: ESIM
      imsi:
        description: |
          The IMSI of this SIM
        type: string
        example: '420010845466094'
      pin1:
        description: |
          The pin1 of this SIM
        type: string
        example: '1234'
      pin2:
        description: |
          The pin2 of this SIM
        type: string
        example: '5678'
      puk1:
        description: |
          The puk1 of this SIM
        type: string
        example: '12345678'
      puk2:
        description: |
          The pukk2 of this SIM
        type: string
        example: '87654321'
      serviceProfile:
        description: |
          serviceProfile of ths SIM, applicable for prepaid only
        type: string
        example: service profile 1
      productCategory:
        description: |
          SIM Product Category indicator.
        type: string
        enum:
          - SAWA
          - ALJAWAL
          - FLEX
      productType:
        description: |
          Indicates the actual product Type of the SIM
        type: string
        example: Mobile-Business-SAWA25
      serviceType:
        description: |
          Indicates the type of the service this SIM supports
        type: string
        enum:
          - Prepaid
          - Postpaid
      iccid:
        description: |
          The iccid of this SIM having a length of 18 digits
        type: string
        example: '899660153010008998'
      technology:
        description: |
          The technology of this SIM
        type: string
        enum:
          - 3G